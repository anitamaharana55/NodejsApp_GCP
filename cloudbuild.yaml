steps:
- id: 'branch name'
  name: 'alpine'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
      echo "$BRANCH_NAME"
- id: 'tf init'
  name: "hashicorp/terraform:1.3.0"
  entrypoint: 'sh'
  args:
  - '-c'
  - |

      terraform init -reconfigure
- id: 'tf plan'
  name: "hashicorp/terraform:1.3.0"
  entrypoint: 'sh'
  args:
  - '-c'
  - |
     if [ -d "$_PATH_TF"]; then
        cd $_PATH_TF
        echo "run plan"
        terraform refresh
        terraform plan
      else
        for dir in $_PATH_TF
        do
          cd ${dir}
          env=${dir%*/}
          env=${env#*/}
          echo "${env}"
          terraform plan || exit 1
          cd ../
        done
      fi
- id: 'tf apply or destroy'
  name: "hashicorp/terraform:1.3.0"
  entrypoint: 'sh'
  args:
  - '-c'
  - |
     if [ -d "$_PATH_TF"]; then
        cd $_PATH_TF
        terraform $_TFACTION -auto-approve
     else
        echo "$BRANCH_NAME"
      fi
#timeout = 6100s
logsBucket: 'terraformbackendmysqlapplication'
options:
  logging: GCS_ONLY


